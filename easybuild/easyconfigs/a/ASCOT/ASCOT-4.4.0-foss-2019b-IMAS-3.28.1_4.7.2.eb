easyblock = 'ConfigureMake'

name = 'ASCOT'
version = '4.4.0'

homepage = 'https://git.iter.org/projects/TRAJ/repos/ascot'
description = """Neutral Beam Modelling Code"""

local_dd = '3.28.1'
local_al = '4.7.2'
local_imas= local_dd+"_"+local_al

versionsuffix = '-IMAS-'+ local_imas

toolchain = {'name': 'foss', 'version': '2019b'}

sources = [
    
    {
    'filename': '%(namelower)s-%(version)s.tar.gz',
    'git_config': {
        'url': 'ssh://git@git.iter.org/TRAJ',
        'repo_name': '%(namelower)s',
        'tag': 'feature/python_actor_runs',
    }
    },
    {
        'source_urls':["https://sourceforge.net/code-snapshots/svn/f/fr/freeipc/code/"],
        'filename':'freeipc-code-r4.zip'
    }
]

patches = [
    'ASCOT-4.4.0-fix.patch',
    'ASCOT-0.0.0-Makefile.patch'  ]
# checksums = [
#     'd2aa362ee689be477942b093894539f9889af864ce9bce713df61aec772b9e62',  # ascot-4.4.0.zip
#     'e8d97af46a162d8ea69103153188bf1b7225e9b78c3e47db0032c89428525f42',  # ASCOT-0.0.0-Makefile.patch
# ]

# Run eb with EBROOTIMAS=/work/imas/core/IMAS/3.28.1-4.8.0, in case of
# get_software_root software root for IMAS was not found in environment
# CI MAGIC:fake_unload_latest_IMAS.sh

builddependencies = [
    ("Python","3.7.4"),
    ('FC2K', '4.10.1', '%(versionsuffix)s'),
    ('XMLlib', '3.3.0'),
]
dependencies = [
    ('IMAS',local_imas),
    ('INTERPOS', '9.0.2'),
]

skipsteps = ['configure', 'install']

parallel = 1

build_cmd = './build_imas.sh'
prebuildopts = 'mv -f ../freeipc-code-r4 ./freeIpc && \
                 sed -i "s/EBVERSION/%(version)s/g" Makefile && \
                 sed -i "s/ifort/gfortran/g" actors/*_ids.xml &&'

postinstallcmds = [
    'fc2k fc2k_imas/afsi.xml -nokepler -codeversion %(version)s -pyworkspace %(installdir)s && '
    'fc2k fc2k_imas/ascot4parallel.xml -nokepler -codeversion %(version)s -pyworkspace %(installdir)s && '
    'fc2k fc2k_imas/ascot4serial.xml -nokepler -codeversion %(version)s -pyworkspace %(installdir)s && '
    'fc2k fc2k_imas/bbnbi.xml -nokepler -codeversion %(version)s -pyworkspace %(installdir)s'
]

modextrapaths = {
    'PYTHONPATH':['afsi/%(version)s', 'ascot4parallel/%(version)s', 'ascot4serial/%(version)s', 'bbnbi/%(version)s']
}

sanity_check_paths = {
    'files': [
        'afsi/%(version)s/setup.py', 'afsi/%(version)s/setup.cfg', 'afsi/%(version)s/README.md', 'afsi/%(version)s/afsi/wrapper.py',
        'ascot4parallel/%(version)s/setup.py', 'ascot4parallel/%(version)s/setup.cfg', 'ascot4parallel/%(version)s/README.md', 'ascot4parallel/%(version)s/ascot4parallel/wrapper.py',
        'ascot4serial/%(version)s/setup.py', 'ascot4serial/%(version)s/setup.cfg', 'ascot4serial/%(version)s/README.md', 'ascot4serial/%(version)s/ascot4serial/wrapper.py',
        'bbnbi/%(version)s/setup.py', 'bbnbi/%(version)s/setup.cfg', 'bbnbi/%(version)s/README.md', 'bbnbi/%(version)s/bbnbi/wrapper.py'
    ],
    'dirs':  [
        'afsi/%(version)s/afsi/native_wrapper/bin',
        'ascot4parallel/%(version)s/ascot4parallel/native_wrapper/bin',
        'ascot4serial/%(version)s/ascot4serial/native_wrapper/bin',
        'bbnbi/%(version)s/bbnbi/native_wrapper/bin'
    ]
}

moduleclass = 'phys'