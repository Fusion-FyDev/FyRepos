diff -ruN uda.orig/source/client/clientXDRStream.cpp uda/source/client/clientXDRStream.cpp
--- uda.orig/source/client/clientXDRStream.cpp	2020-05-29 07:30:07.598904383 +0800
+++ uda/source/client/clientXDRStream.cpp	2020-05-29 16:38:59.675183505 +0800
@@ -12,21 +12,20 @@
 #include "connection.h"
 
 #if defined(SSLAUTHENTICATION) && !defined(FATCLIENT)
-#  include <authentication/udaSSL.h>
+#include <authentication/udaSSL.h>
 #endif
 
 static XDR clientXDRinput;
 static XDR clientXDRoutput;
 
 #if defined(__GNUC__)
-XDR* clientInput = &clientXDRinput;
-XDR* clientOutput = &clientXDRoutput;
+XDR *clientInput = &clientXDRinput;
+XDR *clientOutput = &clientXDRoutput;
 #else
-extern "C" XDR* clientInput = &clientXDRinput;
-extern "C" XDR* clientOutput = &clientXDRoutput;
+extern "C" XDR *clientInput = &clientXDRinput;
+extern "C" XDR *clientOutput = &clientXDRoutput;
 #endif
 
-
 void idamCreateXDRStream()
 {
     clientOutput->x_ops = nullptr;
@@ -36,65 +35,68 @@
 
 #if defined(SSLAUTHENTICATION) && !defined(FATCLIENT)
 
-    if(getUdaClientSSLDisabled()){
-    
+    if (getUdaClientSSLDisabled())
+    {
+
 #ifdef __APPLE__
-       xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                     (int (*)(void*, void*, int))clientReadin,
-                     (int (*)(void*, void*, int))clientWriteout);
-
-       xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                     (int (*)(void*, void*, int))clientReadin,
-                     (int (*)(void*, void*, int))clientWriteout);
+        xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
+                      reinterpret_cast<int (*)(void *, void *, int)>(clientReadin),
+                      reinterpret_cast<int (*)(void *, void *, int)>(clientWriteout));
+
+        xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
+                      reinterpret_cast<int (*)(void *, void *, int)>(clientReadin),
+                      reinterpret_cast<int (*)(void *, void *, int)>(clientWriteout));
 #else
-       xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                     (int (*)(char*, char*, int)) clientReadin,
-                     (int (*)(char*, char*, int)) clientWriteout);
-
-       xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                     (int (*)(char*, char*, int)) clientReadin,
-                     (int (*)(char*, char*, int)) clientWriteout);
-#endif    
-    } else {
+        xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
+                      reinterpret_cast<int (*)(void *, void *, int)>(clientReadin),
+                      reinterpret_cast<int (*)(void *, void *, int)>(clientWriteout));
+
+        xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
+                      reinterpret_cast<int (*)(void *, void *, int)>(clientReadin),
+                      reinterpret_cast<int (*)(void *, void *, int)>(clientWriteout));
+#endif
+    }
+    else
+    {
 #ifdef __APPLE__
-       xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                     (int (*)(void*, void*, int))readUdaClientSSL,
-                     (int (*)(void*, void*, int))writeUdaClientSSL);
-
-       xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                     (int (*)(void*, void*, int))readUdaClientSSL,
-                     (int (*)(void*, void*, int))writeUdaClientSSL);
+        xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
+                      reinterpret_cast<int (*)(void *, void *, int)>(readUdaClientSSL),
+                      reinterpret_cast<int (*)(void *, void *, int)>(writeUdaClientSSL));
+
+        xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
+                      reinterpret_cast<int (*)(void *, void *, int)>(readUdaClientSSL),
+                      reinterpret_cast<int (*)(void *, void *, int)>(writeUdaClientSSL));
 #else
-       xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                     (int (*)(char*, char*, int)) readUdaClientSSL,
-                     (int (*)(char*, char*, int)) writeUdaClientSSL);
-
-       xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                     (int (*)(char*, char*, int)) readUdaClientSSL,
-                     (int (*)(char*, char*, int)) writeUdaClientSSL);
+        xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
+                      reinterpret_cast<int (*)(void *, void *, int)>(readUdaClientSSL),
+                      reinterpret_cast<int (*)(void *, void *, int)>(writeUdaClientSSL));
+
+        xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
+                      reinterpret_cast<int (*)(void *, void *, int)>(readUdaClientSSL),
+                      reinterpret_cast<int (*)(void *, void *, int)>(writeUdaClientSSL));
 #endif
     }
 #else
 
 #ifdef __APPLE__
     xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                  (int (*)(void*, void*, int))clientReadin,
-                  (int (*)(void*, void*, int))clientWriteout);
+                  reinterpret_cast<int (*)(void *, void *, int)>(clientReadin),
+                  reinterpret_cast<int (*)(void *, void *, int)>(clientWriteout));
 
     xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                  (int (*)(void*, void*, int))clientReadin,
-                  (int (*)(void*, void*, int))clientWriteout);
+                  reinterpret_cast<int (*)(void *, void *, int)>(clientReadin),
+                  reinterpret_cast<int (*)(void *, void *, int)>(clientWriteout));
 #else
     xdrrec_create(clientOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                  (int (*)(char*, char*, int)) clientReadin,
-                  (int (*)(char*, char*, int)) clientWriteout);
+                  reinterpret_cast<int (*)(void *, void *, int)>(clientReadin),
+                  reinterpret_cast<int (*)(void *, void *, int)>(clientWriteout));
 
     xdrrec_create(clientInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                  (int (*)(char*, char*, int)) clientReadin,
-                  (int (*)(char*, char*, int)) clientWriteout);
+                  reinterpret_cast<int (*)(void *, void *, int)>(clientReadin),
+                  reinterpret_cast<int (*)(void *, void *, int)>(clientWriteout));
 #endif
 
-#endif   // SSLAUTHENTICATION
+#endif // SSLAUTHENTICATION
 
     clientInput->x_op = XDR_DECODE;
     clientOutput->x_op = XDR_ENCODE;
diff -ruN uda.orig/source/etc/uda-client.pc.in uda/source/etc/uda-client.pc.in
--- uda.orig/source/etc/uda-client.pc.in	2020-05-29 07:30:07.606904336 +0800
+++ uda/source/etc/uda-client.pc.in	2020-05-30 08:41:01.162150779 +0800
@@ -9,4 +9,4 @@
 URL: http://www.iter.org/UDA
 Version: @PROJECT_VERSION@
 Cflags: -I${includedir}
-Libs: -L${libdir} -luda_client
+Libs: -L${libdir} -luda_client -ltirpc -lmemcached
diff -ruN uda.orig/source/etc/uda-cpp.pc.in uda/source/etc/uda-cpp.pc.in
--- uda.orig/source/etc/uda-cpp.pc.in	2020-05-29 07:30:07.606904336 +0800
+++ uda/source/etc/uda-cpp.pc.in	2020-05-30 08:40:21.854158001 +0800
@@ -9,4 +9,4 @@
 URL: http://www.iter.org/UDA
 Version: @PROJECT_VERSION@
 Cflags: -std=c++11 -I${includedir} -I${includedir}/c++
-Libs: -L${libdir} -luda_cpp
+Libs: -L${libdir} -luda_cpp -ltirpc -lmemcached
diff -ruN uda.orig/source/etc/uda-fat-client.pc.in uda/source/etc/uda-fat-client.pc.in
--- uda.orig/source/etc/uda-fat-client.pc.in	2020-05-29 07:30:07.606904336 +0800
+++ uda/source/etc/uda-fat-client.pc.in	2020-05-30 08:41:21.678150472 +0800
@@ -9,4 +9,4 @@
 URL: http://www.iter.org/UDA
 Version: @PROJECT_VERSION@
 Cflags: -DFATCLIENT -I${includedir}
-Libs: -L${libdir} -lfatuda_client
+Libs: -L${libdir} -lfatuda_client -ltirpc -lmemcached
diff -ruN uda.orig/source/etc/uda-fat-cpp.pc.in uda/source/etc/uda-fat-cpp.pc.in
--- uda.orig/source/etc/uda-fat-cpp.pc.in	2020-05-29 07:30:07.606904336 +0800
+++ uda/source/etc/uda-fat-cpp.pc.in	2020-05-30 08:40:39.914153572 +0800
@@ -9,4 +9,4 @@
 URL: http://www.iter.org/UDA
 Version: @PROJECT_VERSION@
 Cflags: -DFATCLIENT -std=c++11 -I${includedir} -I${includedir}/c++
-Libs: -L${libdir} -lfatuda_cpp
+Libs: -L${libdir} -lfatuda_cpp -ltirpc -lmemcached
diff -ruN uda.orig/source/etc/uda-plugins.pc.in uda/source/etc/uda-plugins.pc.in
--- uda.orig/source/etc/uda-plugins.pc.in	2020-05-29 07:30:07.606904336 +0800
+++ uda/source/etc/uda-plugins.pc.in	2020-05-29 08:54:44.405930765 +0800
@@ -9,4 +9,4 @@
 URL: http://www.iter.org/UDA
 Version: @PROJECT_VERSION@
 Cflags: -I${includedir}
-Libs: -L${libdir} -luda_plugins -luda_server
\ 
+Libs: -L${libdir} -luda_plugins -luda_server -ltirpc
\ 
diff -ruN uda.orig/source/server/createXDRStream.cpp uda/source/server/createXDRStream.cpp
--- uda.orig/source/server/createXDRStream.cpp	2020-05-29 07:30:07.610904313 +0800
+++ uda/source/server/createXDRStream.cpp	2020-05-29 16:42:34.395556829 +0800
@@ -21,38 +21,38 @@
 
 #ifdef __APPLE__
        xdrrec_create( serverOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                      (int (*) (void *, void *, int))Readin,
-                      (int (*) (void *, void *, int))Writeout);
+                       reinterpret_cast<int (*)(void *, void *, int)>(Readin),
+                       reinterpret_cast<int (*)(void *, void *, int)>(Writeout));
 
        xdrrec_create( serverInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                      (int (*) (void *, void *, int))Readin,
-                      (int (*) (void *, void *, int))Writeout);
+                       reinterpret_cast<int (*)(void *, void *, int)>(Readin),
+                       reinterpret_cast<int (*)(void *, void *, int)>(Writeout));
 #else
        xdrrec_create( serverOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                      (int (*) (char *, char *, int))Readin,
-                      (int (*) (char *, char *, int))Writeout);
+                       reinterpret_cast<int (*)(void *, void *, int)>(Readin),
+                       reinterpret_cast<int (*)(void *, void *, int)>(Writeout));
 
        xdrrec_create( serverInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                      (int (*) (char *, char *, int))Readin,
-                      (int (*) (char *, char *, int))Writeout);
+                       reinterpret_cast<int (*)(void *, void *, int)>(Readin),
+                       reinterpret_cast<int (*)(void *, void *, int)>(Writeout));
 #endif     
     } else { 
 #ifdef __APPLE__
        xdrrec_create( serverOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                      (int (*) (void *, void *, int))readUdaServerSSL,
-                      (int (*) (void *, void *, int))writeUdaServerSSL);
+                       reinterpret_cast<int (*)(void *, void *, int)>readUdaServerSSL,
+                       reinterpret_cast<int (*)(void *, void *, int)>writeUdaServerSSL);
 
        xdrrec_create( serverInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                      (int (*) (void *, void *, int))readUdaServerSSL,
-                      (int (*) (void *, void *, int))writeUdaServerSSL);
+                       reinterpret_cast<int (*)(void *, void *, int)>readUdaServerSSL,
+                       reinterpret_cast<int (*)(void *, void *, int)>writeUdaServerSSL);
 #else
        xdrrec_create( serverOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                      (int (*) (char *, char *, int))readUdaServerSSL,
-                      (int (*) (char *, char *, int))writeUdaServerSSL);
+                       reinterpret_cast<int (*)(void *, void *, int)>readUdaServerSSL,
+                       reinterpret_cast<int (*)(void *, void *, int)>writeUdaServerSSL);
 
        xdrrec_create( serverInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                      (int (*) (char *, char *, int))readUdaServerSSL,
-                      (int (*) (char *, char *, int))writeUdaServerSSL);
+                       reinterpret_cast<int (*)(void *, void *, int)>readUdaServerSSL,
+                       reinterpret_cast<int (*)(void *, void *, int)>writeUdaServerSSL);
 #endif
     }
     
@@ -60,20 +60,20 @@
 
 #ifdef __APPLE__
     xdrrec_create( serverOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                   (int (*) (void *, void *, int))Readin,
-                   (int (*) (void *, void *, int))Writeout);
+                    reinterpret_cast<int (*)(void *, void *, int)>(Readin),
+                    reinterpret_cast<int (*)(void *, void *, int)>(Writeout));
 
     xdrrec_create( serverInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                   (int (*) (void *, void *, int))Readin,
-                   (int (*) (void *, void *, int))Writeout);
+                    reinterpret_cast<int (*)(void *, void *, int)>(Readin),
+                    reinterpret_cast<int (*)(void *, void *, int)>(Writeout));
 #else
     xdrrec_create( serverOutput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                   (int (*) (char *, char *, int))Readin,
-                   (int (*) (char *, char *, int))Writeout);
+                    reinterpret_cast<int (*)(void *, void *, int)>(Readin),
+                    reinterpret_cast<int (*)(void *, void *, int)>(Writeout));
 
     xdrrec_create( serverInput, DB_READ_BLOCK_SIZE, DB_WRITE_BLOCK_SIZE, nullptr,
-                   (int (*) (char *, char *, int))Readin,
-                   (int (*) (char *, char *, int))Writeout);
+                    reinterpret_cast<int (*)(void *, void *, int)>(Readin),
+                    reinterpret_cast<int (*)(void *, void *, int)>(Writeout));
 #endif
 
 #endif   // SSLAUTHENTICATION
diff -ruN uda.orig/.vscode/settings.json uda/.vscode/settings.json
--- uda.orig/.vscode/settings.json	1970-01-01 08:00:00.000000000 +0800
+++ uda/.vscode/settings.json	2020-05-29 08:32:01.484599072 +0800
@@ -0,0 +1,3 @@
+{
+    "cmake.configureOnOpen": false
+}
\ 
